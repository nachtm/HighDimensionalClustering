TODO/Plan:
    http://staff.itee.uq.edu.au/taoyf/paper/sigmod15-dbscan.pdf
        this paper proposes a faster DBSCAN for greater than 3 dimensions. It's a little dense to get through but maybe applicable??
        
Algorithms:
    There are three algorithms that build on each other, so maybe we go through and build each one.
    Even if it turns out that this is not the way to go, it's a helpful way to organize
    
    2.2 the 2d algorithm of [11]
        impose a grid T on the space
            cells are either empty or non-empty
        determine whether each point is core or non-core
        a cell is a core cell if it contains a core point
        P(c) is the set of points contained in cell c
        S_core is the set of all core cells in the grid T   
        Build a graph G=(V,E):
            there is one vertex for each core cell in S_core
            there are edges between vertices if the minimum distance between points in the two cells is <= epsilon
        Then each connected component of the graph contains the core points of a cluster.
        Then assign border points.
        
        Functions?
            buildGrid()
            labelPoints()       
            buildGraph()
    3.2 a new exact algorithm for d >= 3
    4.4 solving p-approximate dbscan